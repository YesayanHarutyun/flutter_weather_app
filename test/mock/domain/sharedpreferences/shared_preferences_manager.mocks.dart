// Mocks generated by Mockito 5.4.3 from annotations
// in flutter_weather_app/test/mock/domain/sharedpreferences/shared_preferences_manager.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_weather_app/domain/sharedpreferences/shared_preferences_manager.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SharedPreferencesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesManager extends _i1.Mock
    implements _i2.SharedPreferencesManager {
  MockSharedPreferencesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> setSelectedTheme(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setSelectedTheme,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getSelectedTheme() => (super.noSuchMethod(
        Invocation.method(
          #getSelectedTheme,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> setCurrentCity(String? cityName) => (super.noSuchMethod(
        Invocation.method(
          #setCurrentCity,
          [cityName],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getCurrentCity() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentCity,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}
