// Mocks generated by Mockito 5.4.3 from annotations
// in flutter_weather_app/test/mock/domain/repository/weather_repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_weather_app/domain/models/cities_list_model.dart'
    as _i3;
import 'package:flutter_weather_app/domain/models/city_model.dart' as _i8;
import 'package:flutter_weather_app/domain/models/forecast_model_wrapper.dart'
    as _i4;
import 'package:flutter_weather_app/domain/models/suggested_cities_model.dart'
    as _i7;
import 'package:flutter_weather_app/domain/models/weather_model.dart' as _i2;
import 'package:flutter_weather_app/domain/repository/weather_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherModel_0 extends _i1.SmartFake implements _i2.WeatherModel {
  _FakeWeatherModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCitiesListModel_1 extends _i1.SmartFake
    implements _i3.CitiesListModel {
  _FakeCitiesListModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForecastModelWrapper_2 extends _i1.SmartFake
    implements _i4.ForecastModelWrapper {
  _FakeForecastModelWrapper_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i5.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.WeatherModel> fetchWeatherByCity(
    bool? isCurrentCity,
    String? city,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWeatherByCity,
          [
            isCurrentCity,
            city,
          ],
        ),
        returnValue: _i6.Future<_i2.WeatherModel>.value(_FakeWeatherModel_0(
          this,
          Invocation.method(
            #fetchWeatherByCity,
            [
              isCurrentCity,
              city,
            ],
          ),
        )),
      ) as _i6.Future<_i2.WeatherModel>);

  @override
  _i6.Future<List<_i7.SuggestedCitiesModel>> fetchAutoCompleteSearchData(
          String? citySuggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAutoCompleteSearchData,
          [citySuggestion],
        ),
        returnValue: _i6.Future<List<_i7.SuggestedCitiesModel>>.value(
            <_i7.SuggestedCitiesModel>[]),
      ) as _i6.Future<List<_i7.SuggestedCitiesModel>>);

  @override
  _i6.Future<_i3.CitiesListModel> getFavouriteCitiesList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavouriteCitiesList,
          [],
        ),
        returnValue:
            _i6.Future<_i3.CitiesListModel>.value(_FakeCitiesListModel_1(
          this,
          Invocation.method(
            #getFavouriteCitiesList,
            [],
          ),
        )),
      ) as _i6.Future<_i3.CitiesListModel>);

  @override
  _i6.Future<bool> addFavouriteCity(_i8.CityModel? cityModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavouriteCity,
          [cityModel],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> deleteFavouriteCity(_i8.CityModel? cityModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFavouriteCity,
          [cityModel],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i8.CityModel?> getCityById(String? cityId) => (super.noSuchMethod(
        Invocation.method(
          #getCityById,
          [cityId],
        ),
        returnValue: _i6.Future<_i8.CityModel?>.value(),
      ) as _i6.Future<_i8.CityModel?>);

  @override
  _i6.Future<_i4.ForecastModelWrapper> fetchForecastWeatherByCity(
          String? cityName) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchForecastWeatherByCity,
          [cityName],
        ),
        returnValue: _i6.Future<_i4.ForecastModelWrapper>.value(
            _FakeForecastModelWrapper_2(
          this,
          Invocation.method(
            #fetchForecastWeatherByCity,
            [cityName],
          ),
        )),
      ) as _i6.Future<_i4.ForecastModelWrapper>);
}
