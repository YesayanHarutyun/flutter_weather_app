// Mocks generated by Mockito 5.4.3 from annotations
// in flutter_weather_app/test/mock/presentation/viewmodel/favourite_cities_viewmodel_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i4;
import 'package:flutter_weather_app/domain/models/cities_list_model.dart'
    as _i6;
import 'package:flutter_weather_app/domain/models/city_model.dart' as _i7;
import 'package:flutter_weather_app/presentation/state/state.dart' as _i2;
import 'package:flutter_weather_app/presentation/viewmodel/favourite_cities_viewmodel.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeState_0<T> extends _i1.SmartFake implements _i2.State<T> {
  _FakeState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavouriteCitiesViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavouriteCitiesViewModel extends _i1.Mock
    implements _i3.FavouriteCitiesViewModel {
  MockFavouriteCitiesViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onError(_i4.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  _i5.Stream<_i2.State<_i6.CitiesListModel>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i2.State<_i6.CitiesListModel>>.empty(),
      ) as _i5.Stream<_i2.State<_i6.CitiesListModel>>);

  @override
  _i2.State<_i6.CitiesListModel> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeState_0<_i6.CitiesListModel>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.State<_i6.CitiesListModel>);

  @override
  set state(_i2.State<_i6.CitiesListModel>? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.State<_i6.CitiesListModel> get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _FakeState_0<_i6.CitiesListModel>(
          this,
          Invocation.getter(#debugState),
        ),
      ) as _i2.State<_i6.CitiesListModel>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> loadFavouriteCities() => (super.noSuchMethod(
        Invocation.method(
          #loadFavouriteCities,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  dynamic deleteFavouriteCity(_i7.CityModel? cityModel) =>
      super.noSuchMethod(Invocation.method(
        #deleteFavouriteCity,
        [cityModel],
      ));

  @override
  bool updateShouldNotify(
    _i2.State<_i6.CitiesListModel>? old,
    _i2.State<_i6.CitiesListModel>? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.RemoveListener addListener(
    _i8.Listener<_i2.State<_i6.CitiesListModel>>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
      ) as _i4.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
